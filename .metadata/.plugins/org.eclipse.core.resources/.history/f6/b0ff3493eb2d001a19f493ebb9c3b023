package com.springexample.ajax.controller;

import java.text.SimpleDateFormat;
import java.util.Date;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.demoweb.service.MemberService;
import com.demoweb.vo.Member;
import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

@Controller
@RequestMapping("/")
public class DemoController {

	@GetMapping("ajax-example")
	public void showExampleView() {

		// RequestMapping method의 return값이 void인 경우 요청경로가 View-Name이 됨
		// return "ajax-example"

	}
	
	@GetMapping("member-search-one")
	public String showMemberSearchForm() {

		return "account/update";

	}
	
	@GetMapping(path = {"search-member"}, produces = "text/plain; charset=UTF-8")
	@ResponseBody
	public String searchMember(String memberId) {
		
		MemberService memberService = new MemberService();
		Member member = memberService.searchMemberById(memberId);
		
		if (member == null) {
			return "fail to search member";
		} else {
			return String.format("%s|%s|%s|%s|%s", member.getMemberId(), member.getEmail(), member.getRegDate().toString(), 
					member.getUserType(), member.isActive() ? "활성사용자" : "비활성사용자");
		}
		
//		return "search member controller " + "/ " + memberId;
	}
	
	@GetMapping("member-search-two")
	public String showMemberSearchFormTwo() {

		return "account/update2";

	}
	
	@GetMapping(path = {"search-member2"}, produces = "application/JSON; charset=UTF-8")
	@ResponseBody
	public String searchMember2(String memberId) {
		
		MemberService memberService = new MemberService();
		Member member = memberService.searchMemberById(memberId);
		
		if (member == null) {
			return "{ \"error\": \"검색 실패\" }";
		} else {
//			Gson gson = new Gson();
			Gson gson = new GsonBuilder().setDateFormat("yyyy-MM-dd").create();
			String json = gson.toJson(member); // Object -> JSON String
			
			return json;
		}
	}
	
	@GetMapping("member-search-three")
	public String showMemberSearchFormThree() {

		return "account/update3";

	}
	
	@GetMapping(path = {"search-member3"}, produces = "application/JSON; charset=UTF-8")
	@ResponseBody
	public Member searchMember3(String memberId) {
		
		MemberService memberService = new MemberService();
		Member member = memberService.searchMemberById(memberId);
		
		if (member == null) {
			throw new RuntimeException("검색 실패");
		} else {
			return member;
		}
	}

	@GetMapping("get-time")
	@ResponseBody // return값이 ViewName이 아니라 응답컨텐츠 
	public String getTime() {

		// Date를 지정된 format에 따라 String으로 변환
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
		return sdf.format(new Date());
		
	}

}
