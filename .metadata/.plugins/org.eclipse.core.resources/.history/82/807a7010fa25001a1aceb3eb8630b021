package com.springboard.repository;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import com.springboard.vo.BoardVO;

import lombok.Setter;

public class JdbcTemplateBoardDao implements BoardDao {

	@Setter
	private JdbcTemplate jdbcTemplate; // Setter injection(JdbcTemplate)

	@Override
	public int insertBoard(BoardVO board) {

		String sql = "INSERT INTO tbl_board (bno, title, writer, content) " + "VALUES (seq_board.nextval, ?, ?, ?)";

		jdbcTemplate.update(sql, board.getTitle(), board.getWriter(), board.getContent());

		return 0;
	}

	@Override
	public List<BoardVO> selectBoard() {

		String sql = "SELECT bno, title, writer, regdate, updatedate, deleted, readcount " + "FROM tbl_board " +
//					"WHERE deleted = '0' " +
				"ORDER BY bno DESC";

		List<BoardVO> boards = jdbcTemplate.query(sql, null);

		BoardVO board = new BoardVO();
		board.setBno(rs.getInt(1));
		board.setTitle(rs.getString(2));
		board.setWriter(rs.getString(3));
		board.setRegDate(rs.getDate(4));
		board.setUpdateDate(rs.getDate(5));
		board.setDeleted(rs.getBoolean(6));
		board.setReadCount(rs.getInt(7));

		boards.add(board);

		return boards;
	}

}

class BoardRowMapper implements RowMapper<BoardVO> {

	@Override
	public BoardVO mapRow(ResultSet rs, int rowNum) throws SQLException {

		return null;
	}

}
